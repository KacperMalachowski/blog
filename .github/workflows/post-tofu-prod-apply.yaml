name: post-tofu-prod-apply

on:
  push:
    branches:
      - main
    paths:
      - "./.github/workflows/post-prod-apply.yaml"
      - "./**/*.tf"
      - "./**/*.tfvars"

jobs:
  apply:
    name: Apply Change
    runs-on: ubuntu-latest
    permissions:
      contents: "read"
      id-token: "write"
      pull-requests: write
    strategy:
      matrix:
        environment: ['prod']
    defaults:
      run:
        working-directory: 'config/environments/${{ matrix.environment }}'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Authenticate to Google Cloud
        id: auth
        uses: google-github-actions/auth@v1
        with:
          workload_identity_provider: ${{ vars.GH_COM_MALACHOWSKI_BLOG_GCP_WORKLOAD_IDENTITY_FEDERATION_PROVIDER }}
          service_account: ${{ vars.GCP_TOFU_EXECUTOR_SERVICE_ACCOUNT_EMAIL }}
      - name: Retrieve secrets
        id: secrets
        uses: google-github-actions/get-secretmanager-secrets@v2
        with:
          secrets: |-
            cloudflare-read-zone-token:${{ vars.GCP_BLOG_PROJECT_ID }}/${{ vars.GCP_CLOUDFLARE_READ_ZONE_TOKEN_SECRET_NAME }}
            github-variables-access-token:${{ vars.GCP_BLOG_PROJECT_ID}}/${{ vars.GCP_GH_COM_VARIABLES_ACCESS_TOKEN_SECRET_NAME }}
      - name: Setup Tofu
        uses: opentofu/setup-opentofu@v1.0.1
        with:
          tofu_wrapper: false
      - name: Check if directory is not empty
        id: check
        run: |
          if [ "$(ls -A . )" ]; then
            echo "Directory is not empty"
          else
            echo "Directory is empty"
            exit 1
          fi
      - name: Init
        run: tofu init
      - name: Validate
        run: tofu validate
      - name: Apply
        env:
          CLOUDFLARE_API_TOKEN: ${{ steps.secrets.outputs.cloudflare-read-zone-token }}
          GITHUB_TOKEN: ${{ steps.secrets.outputs.github-variables-access-token }}
        run: tofu apply -input=false -auto-approve
        
