name: Build Docker Image 

on:
  push:
    branches:
      - main

permissions:
  contents: read
  packages: write

jobs:
  docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        side: [
          { 
            name: 'client', 
            context: './client', 
            dockerfile: './client/Dockerfile',
            update_webhook: 'https://portainer.kacpermalachowski.pl/api/webhooks/1e100b68-8b18-4384-8d2c-4ca1900c27db'
          },
          { 
            name: 'server', 
            context: './server', 
            dockerfile: './server/Dockerfile',
            update_webhook: 'https://portainer.kacpermalachowski.pl/api/webhooks/c4d36782-85ea-4388-bbfb-8b5aa7274c5f'
          }
        ]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
         
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@35e9aff4f5d665b5aa8a8f2adffaf8a1b5f49cc0
        with:
          images: ghcr.io/${{ github.repository }}/${{ matrix.side.name }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: ${{ matrix.side.context }}
          file: ${{ matrix.side.dockerfile }}
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Update Image on Cluster
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ matrix.side.update_webhook }}
          method: 'POST'
